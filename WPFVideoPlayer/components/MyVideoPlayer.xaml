<UserControl x:Class="WPFVideoPlayer.Components.MyVideoPlayer"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WPFVideoPlayer.Components"
             mc:Ignorable="d" 
             x:Name="VideoPlayerRoot"
             Loaded="VideoPlayerRoot_Loaded"
             Unloaded="VideoPlayerRoot_Unloaded">

    <UserControl.Resources>
        <ResourceDictionary>

            <Style x:Key="btnAerrowUP" TargetType="Button">

                <Setter Property="OverridesDefaultStyle" Value="True"/>

                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="../Images/up_normal.png" />
                    </Setter.Value>
                </Setter>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Name="border" 
                        BorderThickness="0" 
                        Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="border">
                                        <Setter.Value>
                                            <ImageBrush ImageSource="../Images/up_active.png" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Cursor" Value="Hand"/>

                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="btnPlayBig" TargetType="Button">

                <Setter Property="OverridesDefaultStyle" Value="True"/>

                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="../Images/thumb_play_normal.png" />
                    </Setter.Value>
                </Setter>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Name="border" 
                        BorderThickness="0" 
                        Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="border">
                                        <Setter.Value>
                                            <ImageBrush ImageSource="../Images/thumb_play_active.png" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Cursor" Value="Hand"/>

                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="btnPlayPause" TargetType="{x:Type ToggleButton}">

                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="../Images/play30.png" AlignmentX="Center" AlignmentY="Center" Stretch="None"/>
                    </Setter.Value>
                </Setter>

                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="FontSize" Value="24"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}"  Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Button.IsDefaulted" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <!--<Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="#F7BD20"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="#F7BD20"/>
                                </Trigger>-->
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <ImageBrush ImageSource="../Images/pause30.png" AlignmentX="Center" AlignmentY="Center" Stretch="None"/>
                                        </Setter.Value>
                                    </Setter>

                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" TargetName="border" Value="0"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="btnFullScreen" TargetType="{x:Type ToggleButton}">

                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="../Images/fullscreen30.png" AlignmentX="Center" AlignmentY="Center" Stretch="None"/>
                    </Setter.Value>
                </Setter>

                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="FontSize" Value="24"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}"  Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Button.IsDefaulted" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <!--<Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="#F7BD20"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="#F7BD20"/>
                                </Trigger>-->
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <ImageBrush ImageSource="../Images/fullscreenout30.png" AlignmentX="Center" AlignmentY="Center" Stretch="None"/>
                                        </Setter.Value>
                                    </Setter>

                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" TargetName="border" Value="0"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="btnVolume" TargetType="{x:Type ToggleButton}">

                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="../Images/audio25.png" AlignmentX="Center" AlignmentY="Center" Stretch="None"/>
                    </Setter.Value>
                </Setter>

                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="FontSize" Value="24"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}"  Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Button.IsDefaulted" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <ImageBrush ImageSource="../Images/noaudio25.png" AlignmentX="Center" AlignmentY="Center" Stretch="None"/>
                                        </Setter.Value>
                                    </Setter>

                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" TargetName="border" Value="0"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>

    <Grid
        Name="mainGrid"
        Background="Black"
        Height="{Binding Height, ElementName=VideoPlayerRoot}"
             Width="{Binding Width, ElementName=VideoPlayerRoot}">
        <Grid.RowDefinitions>
            <RowDefinition Name="mediaPlayerRow"></RowDefinition>
            <RowDefinition Height="0" Name="controlRow"></RowDefinition>
        </Grid.RowDefinitions>

        <Grid
            Grid.Row="0"
            Name="videoThumbnail"
            Height="{Binding Height, ElementName=VideoPlayerRoot}"
             Width="{Binding Width, ElementName=VideoPlayerRoot}"
            TouchDown="videoThumbnail_TouchDown">

            <Grid.Background>
                <ImageBrush 
                    ImageSource="{Binding ThumbnailSource, ElementName=VideoPlayerRoot}"/>
            </Grid.Background>

            <Button 
                Name="btnBigPlay"
                Click="btnBigPlay_Click"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Width="110"
                Height="110"
                BorderThickness="0"
                BorderBrush="White"
                Style="{DynamicResource btnPlayBig}">
            </Button>

        </Grid>

        <MediaElement
            Grid.Row="0"
            Source="{Binding Source, ElementName=VideoPlayerRoot}"
                    Name="myVideoPlayer"
                    LoadedBehavior="Manual"
                    UnloadedBehavior="Manual"
                    MediaOpened="MyVideoPlayer_MediaOpened"
                    MediaEnded="MyVideoPlayer_MediaEnded"
                    MouseEnter="myVideoPlayer_MouseEnter"
                    MouseLeave="myVideoPlayer_MouseLeave"
                    TouchDown="myVideoPlayer_TouchDown"
                    MouseDown="myVideoPlayer_MouseDown"
                    ScrubbingEnabled="True"
            VerticalAlignment="Stretch"
            Stretch="Uniform">

        </MediaElement>

        <Grid
            Grid.Row="1"
            x:Name="VideoControlPanel"
            MouseEnter="VideoControlPanel_MouseEnter"
            MouseLeave="VideoControlPanel_MouseLeave"
            Background="Black"
            Margin="0,0,0,0"
            Height="75"
            HorizontalAlignment="Stretch">

            <Grid.RowDefinitions>
                <RowDefinition></RowDefinition>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="50"></ColumnDefinition>
                <ColumnDefinition Width="50"></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition Width="50"></ColumnDefinition>
                <ColumnDefinition Width="50"></ColumnDefinition>
                <ColumnDefinition Width="100"></ColumnDefinition>
                <ColumnDefinition Width="50"></ColumnDefinition>
            </Grid.ColumnDefinitions>


            <ToggleButton
                Grid.Column="0"
                Name="btnPlay"
                Click="btnPlay_Click"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Left"
                        Width="50"
                        Height="50"
                Style="{DynamicResource btnPlayPause}"/>


            <TextBlock 
                Grid.Column="1"
                Name="lblCurrentPosition" 
                Foreground="White"
                VerticalAlignment="Center"
                HorizontalAlignment="Right"
                Margin="10,0,0,0"/>

            <Slider
                Grid.Column="2"
                        Name="videoTimeSlider"
                        ValueChanged="VideoTimeSlider_ValueChanged"
                Thumb.DragStarted="videoTimeSlider_DragStarted"
                Thumb.DragCompleted="videoTimeSlider_DragCompleted"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Stretch"
                            Width="auto"
                            Margin="10,0,0,0"/>

            <TextBlock 
                Grid.Column="3"
                Name="lblMaximumPosition" 
                Foreground="White"
                VerticalAlignment="Center"
                HorizontalAlignment="Left"
                Margin="10,0,0,0"/>

            <ToggleButton
                Grid.Column="4"
                Name="btnVolume"
                Click="btnVolume_Click"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Right"
                        Width="25"
                        Height="25"
                Margin="10,0,0,0"
                Style="{DynamicResource btnVolume}"/>

            <Slider
                Grid.Column="5"
                        Name="videoVolumeSlider"
                        ValueChanged="VideoVolumeSlider_ValueChanged"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Stretch"
                        Maximum="1"
                        Minimum="0"
                            Margin="10,0,0,0"/>

            <ToggleButton
                Grid.Column="6"
                Name="btnFullScreen"
                Click="btnFullScreen_Click"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Right"
                        Width="50"
                        Height="50"
                Style="{DynamicResource btnFullScreen}"/>

        </Grid>

    </Grid>    
</UserControl>
